React를 예쁘게 꾸미기 위해서 컴포넌트에 CSS를 추가
CSS 추가시 3가지 방법을 이용
  internal
    style 태그를 이용
  inline
    직접적인 속성을 태그에 작성
  linking
    파일에 미리 적어두고 선택자만 작성

위 세가지 CSS 방식은 각각 제약이 존재한다
  1. internal 방식
    태그를 적어야하기 때문에 태그가 컴포넌트 중간에 들어간다
    가독성이 매우 떨어진다
  
  2. inline 방식
    직접적으로 속성을 넣어서 관리
    유지 보수가 어렵다

  3. linking 방식
    전체적인 컴포넌트를 모두 제어하도록 파일을 제작
    한개의 css에 과중한 역할을 부여하거나
    여러개의 css에 따로 작성하는식으로 사용
    여러개의 css로 각각 컴포넌트별로 관리한다면 관리가 용이해지긴한다
    하지만 사용하다보면 동일한 컴포넌트인데 다른 css를 쓰거나 다른 꾸미기를 사용해야하는 경우

React나온 React 전용 CSS 관리 방식인 "Module CSS" - 이걸 더 선호한다. : 유지보수가 압도적으로 좋다
  빨간 버튼과 파란 버튼을 만들고 싶을때 .red-button, .blue-button 이라고 다른 이름으로 지칭하는게 아니라
  .button 이라고 버튼을 지정한다고 만들어두면 파일의 이름을 기반으로 알아서 구분되도록 만드는것
  CSS의 Selector를 간략화해서 손쉽게 관리하도록 만드는 기능

  CSS 파일 생성
    파일 명을 "이름.module.css" 라고 적어야한다 $$$ 이거 주의할점! 중간에 module 안 들어가면 인식 못한다 함
  
  CSS Selector 작성
    #~.~ 이런식으로 길게 작성이 안된다
    대신 Selector에 .className 만 작성한다
    그러면 해당 .className이 Module CSS화 할때 -> className-QWjfkl2if $$$ 알아서 무작위 글자로 바뀜 : 나중에 다른거랑 안겹치게 해줌
  $$$ 이 위는 1번 예제로 해둠

  Module CSS Import 방법
    import 객체명 from '파일명.module.css'; 작성
      typescript인 경우 *.module.css 자료형 작성
        declare module '*.module.css' {
          const classes: { [key:string]: string };
          export default classes;
        }
    그 후 객체명.Selector로 사용

  하지만 이러한 Module 방식은 속도보다 관리의 용이성에 중점을 둬서
  최근 트렌드와는 상이하다

  최근 트렌드는 기술 발전에 맞게 빠르게 개발하는것이 목적이되었고
  그에 맞는 새로운 방식을 선호한다

  그건 바로 utility 방식

  생산성 , 유지보수 는 둘다 좋을 수 없다

Utility 방식
  각각의 속성을 className 별로 "모두 미리" 작성해두는것
  CSS 파일에 미리 Utility를 적어두고 불러온다
  해당 파일은 전역 방식으로 호출한다
    import '파일.css';

  하지만 이러한 Utility 방식도 단점이 있다
  첫번째는 유지보수가 어렵다는것 $$$ 이건 생산성을 선택해서 쩔수
  두번째는 유틸리티를 미리 만들어둬야한다는것

  이러한 문제를 해결하기위해 Utility방식중에 가장 많이 이용되는 방식의 패키지 - Tailwind

Tailwind 사용법 : 실무에서 가장 많이 이 방식으로 개발하게 될거다 : 이건 2024에 업뎃된 버전 4 방식이다 AI 물어볼 때 참고 꼭 하자
  설치
    npm install tailwindcss @tailwindcss/postcss : 항상 이렇게 두개씩 설치하자
      tailwindcss           -> 유틸리티 CSS 패키지 : 이거만 설치하면 안됨 이거만 깔면 압축 용량이 아니라 용량이 매우 많음
      @tailwindcss/postcss  -> 유틸리티 CSS tailwind 용량 압축 : css 동작하기전 추가적인 동작
  
  설정 : 가장 바깥쪽에 만들어라 파일 (postcss.config.ts, global.css)
    postcss.config.ts : 이거랑
      export default {
        plugins: {
          '@tailwindcss/postcss': {}   -> 이 한줄만 적으면 된다.
        }
      }

      위 내용 작성으로 postcss 동작 활성화

    global.css : 이거 만들어야함
      @import 'tailwindcss';
      
      위 내용 작성으로 tailwindcss 활성화

    VSCode Extention $$$ 사진 첨부해둠
      Tailwind CSS IntelliSense
        TailwindCSS의 ClassName을 Ctrl + Space 누르면 추천하는 확장 $$$ 이게 있어야 외우지 않고 작업 가능 : 자동완성
      Tailwind Fold
        TailwindCSS가 많이 작성되면 코드가 길어지는데 이걸 접어주는 확장

  $$$ 만약 Tailwind가 내가 쓰려는거랑 다를때 커스텀이 가능하다 node_modules 폴더에 들어오기 때문에
  Tailwind Prefix
    @import 'tailwindcss' prefix(글자);
      글자:tailwindcss -> 변경

////////////////////////////////// 연습 문제 //////////////////////////////////
아래 링크의 홈 페이지 디자인 제작
  https://pawple.kafolio.kr/

https://zoom.us/rec/share/qsEvnN1fQD-fdG87Ak0iBw6E3hU1pHYZPEFmwuQfU1j_GaHu23Hevrkocit0qNd_.FpKGTZfKnmq2nZEw 
암호: o4V2%t#$