Tailwind를 사용하는것을 넘어서서 더욱 편리하게 디자인을 만드는 기능
빠르게 디자인을 만들기 위해서는 유틸리티를 쓰는게 더 불편할때가 있다

결국 내가 디자인을 세세히 만들어야하기 때문에 시간을 조금 많이 소비하게 된다

디자인이 완성된것을 이용한다면 더 빠르고 편리하게 디자인을 구성할 수 있을것같다
이미 완성되어있는 컴포넌트를 만들어둔 패키지

컴포넌트 패키지 $$$ 사제로 끌고와서 활용 가능하다 : 만약 쓴다면 하나만 쓰는게 낫다 왜냐하면 유지보수 하기 힘들다
  컴포넌트들을 미리 만들어두고 모아둔 패키지
  이중에서 한개를 오늘 사용해본다

  MaterialUI
    Google UI와 유사
  blueprintJS
    많이 이용되는 디자인을 미리 만들어둔 패키지
  antDesign
    많은 기능을 미리 만들어두고 사용자가 사용할 수 있도록 세팅해둔 패키지
    기업이 좋아할만한 다양한 기능을 이미 만들어둔 패키지
  Chakra-UI
    많이 이용되는 디자인 중에 중요한것들 위주로 미리 뼈대만 만들어두고
    전체 커스텀은 힘들어도 어느정도는 커스텀할 수 있게 만들어둔 패키지

아이콘 설치 : 무료로 아이콘 따오기 좋다
  npm install react-icons

Chakra-UI : 차크라 쓰려면 이것도 명령어로 설치해야한다.
  npm install @chakra-ui/react @emotion/react

  이제 import {Button} from '@chakra-ui/react' 호출 후 태그를 쓰면된다
  근데 그냥 쓰면 useContext 오류가 나기 때문에 따로 처리를 해줘야한다
  Provider를 따로 상위 컴포넌트에 배치하고 넣어야한다

  이러한 Provider라는 공급 태그를 최상위에 감싸줘야지만 해당 태그 안에서 컴포넌트 패키지가 동작한다 
  npx @chakra-ui/cli snippet add
    chakra-ui의 패키지 컴포넌트를 미리 생성하는 명령어

  이걸로 생성된 provider를 이용 $$$ 여기까지 다 하고 app.tsx에서 예제 1번을 실행해보면 잘 되는걸 볼 수 있다

  사용하면 태그를 쓰는것만으로 원하는 컴포넌트를 디자인하여 이용할 수 있기때문에 매우 편리
  다만 ChakraUI는 Theme가 이미 적용되어있기 때문에 useColorMode 훅으로 theme를 변경해야 원하는대로 동작할 수 있다
  만약 tailwind와 함께 쓰고 싶다면 tailwind도 chakraUI에 맞게 작성해야한다 $$$ 반대로 하기엔 어려움

회원가입창 - Chakra-UI & Tailwind
  [        Signin        ]
  [  Id      [        ]  ]
  [  Password[        ]  ]
  [  Password[        ]  ]
  [  [    Signin      ]  ]

////////////////////////////////////////// 연습 문제 //////////////////////////////////////////
방금 만들었던 회원가입창 Chakra-UI만 이용해서 제작

https://zoom.us/rec/share/N2w3JImR8VBHAHgZ1l9833xmiNLObfDRwnnCYXBdlt293_CBENydzw9lnq3_MuK7.JyP0AfDeA6VwdyPH 
암호: l0RL91*%